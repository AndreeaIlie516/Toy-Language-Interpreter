Program state
ID: 1
Execution Stack: (Ref (int) v;(new(v, 20);(Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a)))))))) 
Symbol Table: 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 20);(Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a))))))) Ref (int) v 
Symbol Table: 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 20);(Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a))))))) Ref (int) v 
Symbol Table: 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 20);(Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a))))))) 
Symbol Table: v-(0,int) 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 20);(Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a))))))) 
Symbol Table: v-(0,int) 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a)))))) new(v, 20) 
Symbol Table: v-(0,int) 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a)))))) new(v, 20) 
Symbol Table: v-(0,int) 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a)))))) 
Symbol Table: v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (Ref (int)) a;(new(a, v);(new(v, 30);print(readHeap(readHeap(a)))))) 
Symbol Table: v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, v);(new(v, 30);print(readHeap(readHeap(a))))) Ref (Ref (int)) a 
Symbol Table: v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, v);(new(v, 30);print(readHeap(readHeap(a))))) Ref (Ref (int)) a 
Symbol Table: v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, v);(new(v, 30);print(readHeap(readHeap(a))))) 
Symbol Table: a-(0,Ref (int)) v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, v);(new(v, 30);print(readHeap(readHeap(a))))) 
Symbol Table: a-(0,Ref (int)) v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 30);print(readHeap(readHeap(a)))) new(a, v) 
Symbol Table: a-(0,Ref (int)) v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 30);print(readHeap(readHeap(a)))) new(a, v) 
Symbol Table: a-(0,Ref (int)) v-(1,int) 
Heap: 1-20 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 30);print(readHeap(readHeap(a)))) 
Symbol Table: a-(2,Ref (int)) v-(1,int) 
Heap: 1-20 2-(1,int) 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(v, 30);print(readHeap(readHeap(a)))) 
Symbol Table: a-(2,Ref (int)) v-(1,int) 
Heap: 1-20 2-(1,int) 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(readHeap(a))) new(v, 30) 
Symbol Table: a-(2,Ref (int)) v-(1,int) 
Heap: 1-20 2-(1,int) 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(readHeap(a))) new(v, 30) 
Symbol Table: a-(2,Ref (int)) v-(1,int) 
Heap: 1-20 2-(1,int) 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(readHeap(a))) 
Symbol Table: a-(2,Ref (int)) v-(3,int) 
Heap: 1-20 2-(1,int) 3-30 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(readHeap(a))) 
Symbol Table: a-(2,Ref (int)) v-(3,int) 
Heap: 1-20 2-(1,int) 3-30 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: 
Symbol Table: a-(2,Ref (int)) v-(3,int) 
Heap: 1-20 2-(1,int) 3-30 
Output Console: 20 
File Table: 

