Program state
ID: 1
Execution Stack: (int v;(Ref (int) a;(v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))))))) 
Symbol Table: 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (int) a;(v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))))) int v 
Symbol Table: 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (int) a;(v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))))) int v 
Symbol Table: 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (int) a;(v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))))) 
Symbol Table: v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (Ref (int) a;(v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))))) 
Symbol Table: v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))))) Ref (int) a 
Symbol Table: v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))))) Ref (int) a 
Symbol Table: v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))))) 
Symbol Table: a-(0,int) v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (v = 10;(new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))))) 
Symbol Table: a-(0,int) v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))) v = 10 
Symbol Table: a-(0,int) v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))) v = 10 
Symbol Table: a-(0,int) v-0 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))) 
Symbol Table: a-(0,int) v-10 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (new(a, 22);(fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a))))) 
Symbol Table: a-(0,int) v-10 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))) new(a, 22) 
Symbol Table: a-(0,int) v-10 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))) new(a, 22) 
Symbol Table: a-(0,int) v-10 
Heap: 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))));(print(v);print(readHeap(a)))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (print(v);print(readHeap(a))) fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a)))))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (print(v);print(readHeap(a))) fork((writeHeap(a,30);(v = 32;(print(v);print(readHeap(a)))))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (print(v);print(readHeap(a))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 2
Execution Stack: (writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: (print(v);print(readHeap(a))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 2
Execution Stack: (writeHeap(a,30);(v = 32;(print(v);print(readHeap(a))))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(a)) print(v) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 2
Execution Stack: (v = 32;(print(v);print(readHeap(a)))) writeHeap(a,30) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(a)) print(v) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 2
Execution Stack: (v = 32;(print(v);print(readHeap(a)))) writeHeap(a,30) 
Symbol Table: a-(1,int) v-10 
Heap: 1-22 
Output Console: 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(a)) 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 
File Table: 

Program state
ID: 2
Execution Stack: (v = 32;(print(v);print(readHeap(a)))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 
File Table: 

Program state
ID: 1
Execution Stack: print(readHeap(a)) 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 
File Table: 

Program state
ID: 2
Execution Stack: (v = 32;(print(v);print(readHeap(a)))) 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 
File Table: 

Program state
ID: 1
Execution Stack: 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: (print(v);print(readHeap(a))) v = 32 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: (print(v);print(readHeap(a))) v = 32 
Symbol Table: a-(1,int) v-10 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: (print(v);print(readHeap(a))) 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: (print(v);print(readHeap(a))) 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: print(readHeap(a)) print(v) 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: print(readHeap(a)) print(v) 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 
File Table: 

Program state
ID: 2
Execution Stack: print(readHeap(a)) 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 32 
File Table: 

Program state
ID: 2
Execution Stack: print(readHeap(a)) 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 32 
File Table: 

Program state
ID: 2
Execution Stack: 
Symbol Table: a-(1,int) v-32 
Heap: 1-30 
Output Console: 10 30 32 30 
File Table: 

